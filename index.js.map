{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Настройки бібліотеки згідно з макетом\niziToast.settings({\n  position: 'topRight',\n  messageColor: '#FAFAFB',\n  iconColor: '#FAFAFB',\n  backgroundColor: '#B51B1B',\n});\n\n// особистий API_KEY\nconst API_KEY = '42159732-a54f57e537715c3d1f59422b1';\n\n// функція для отримання даних за запитом\nexport const fetchUsers = async inputValue => {\n  // обєкт з налаштуваннями параметрів запиту\n  const params = new URLSearchParams({\n    q: inputValue,\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  const url = `https://pixabay.com/api/?${params}`;\n\n  const response = await axios.get(url);\n  if (!response.data.total) {\n    iziToast.show({\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n    });\n    return;\n  } else {\n    return response.data.hits;\n  }\n};\n","const refs = {\n  list: document.querySelector('.gallery'),\n  form: document.querySelector('.form'),\n};\n\n// функція для рендеру розмітки карток з зображеннями та описом\nexport function createMarkup(dataList) {\n  const markup = dataList\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n      <li class=\"card\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n        </a>\n        <ul class=\"description-list\">\n          <li class=\"description-item\">\n            <h2 class=\"description-title\">Likes</h2>\n            <p class=\"description-text\">${likes}</p>\n          </li>\n          <li class=\"description-item\">\n            <h2 class=\"description-title\">Views</h2>\n            <p class=\"description-text\">${views}</p>\n          </li>\n          <li class=\"description-item\">\n            <h2 class=\"description-title\">Comments</h2>\n            <p class=\"description-text\">${comments}</p>\n          </li>\n          <li class=\"description-item\">\n            <h2 class=\"description-title\">Downloads</h2>\n            <p class=\"description-text\">${downloads}</p>\n          </li>\n        </ul>\n      </li>`;\n      }\n    )\n    .join('');\n  refs.list.innerHTML = markup; // вставляє в дом розмітку однією операцією\n}\n","import { fetchUsers } from './js/pixabay-api.js';\nimport { createMarkup } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  loader: document.querySelector('.loader'),\n  list: document.querySelector('.gallery'),\n};\nconst { loader, form, list } = refs;\n\n/*** додаткові функції для кращої читабельності ***/\nfunction showLoader() {\n  loader.classList.remove('hidden');\n}\nfunction hideLoader() {\n  loader.classList.add('hidden');\n}\nfunction clearGallery() {\n  list.innerHTML = '';\n}\n// ініціалізація бібліотеки SimpleLightbox\nlet gallery = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nform.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(event) {\n  clearGallery();\n  event.preventDefault();\n  const inputValue = event.target.elements[0].value.trim();\n  if (!inputValue) {\n    return;\n  }\n  showLoader();\n\n  fetchUsers(inputValue)\n    .then(data => {\n      if (data) {\n        createMarkup(data);\n        gallery.refresh();\n      }\n    })\n    .catch(error => console.log(error.message))\n    .finally(() => {\n      hideLoader();\n    });\n\n  form.reset();\n}\n"],"names":["iziToast","API_KEY","fetchUsers","inputValue","url","response","axios","refs","createMarkup","dataList","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","loader","form","list","showLoader","hideLoader","clearGallery","gallery","SimpleLightbox","handlerSubmit","event","data","error"],"mappings":"owBAOAA,EAAS,SAAS,CAChB,SAAU,WACV,aAAc,UACd,UAAW,UACX,gBAAiB,SACnB,CAAC,EAGD,MAAMC,EAAU,qCAGHC,EAAa,MAAMC,GAAc,CAU5C,MAAMC,EAAM,4BARG,IAAI,gBAAgB,CACjC,EAAGD,EACH,IAAKF,EACL,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,CAE6C,GAExCI,EAAW,MAAMC,EAAM,IAAIF,CAAG,EACpC,GAAKC,EAAS,KAAK,MAOjB,OAAOA,EAAS,KAAK,KANrBL,EAAS,KAAK,CACZ,QACE,0EACR,CAAK,CAKL,ECxCMO,EAAO,CACX,KAAM,SAAS,cAAc,UAAU,EACvC,KAAM,SAAS,cAAc,OAAO,CACtC,EAGO,SAASC,EAAaC,EAAU,CACrC,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,wCAEyBL,CAAa;AAAA,4CACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,0CAK5BC,CAAK;AAAA;AAAA;AAAA;AAAA,0CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,0CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,0CAIRC,CAAS;AAAA;AAAA;AAAA,YAK9C,EACA,KAAK,EAAE,EACVV,EAAK,KAAK,UAAYG,CACxB,CCzCA,MAAMH,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,OAAQ,SAAS,cAAc,SAAS,EACxC,KAAM,SAAS,cAAc,UAAU,CACzC,EACM,CAAE,OAAAW,EAAQ,KAAAC,EAAM,KAAAC,CAAI,EAAKb,EAG/B,SAASc,GAAa,CACpBH,EAAO,UAAU,OAAO,QAAQ,CAClC,CACA,SAASI,GAAa,CACpBJ,EAAO,UAAU,IAAI,QAAQ,CAC/B,CACA,SAASK,GAAe,CACtBH,EAAK,UAAY,EACnB,CAEA,IAAII,EAAU,IAAIC,EAAe,aAAc,CAC7C,aAAc,MACd,aAAc,GAChB,CAAC,EAEDN,EAAK,iBAAiB,SAAUO,CAAa,EAE7C,SAASA,EAAcC,EAAO,CAC5BJ,IACAI,EAAM,eAAc,EACpB,MAAMxB,EAAawB,EAAM,OAAO,SAAS,CAAC,EAAE,MAAM,OAC7CxB,IAGLkB,IAEAnB,EAAWC,CAAU,EAClB,KAAKyB,GAAQ,CACRA,IACFpB,EAAaoB,CAAI,EACjBJ,EAAQ,QAAO,EAEvB,CAAK,EACA,MAAMK,GAAS,QAAQ,IAAIA,EAAM,OAAO,CAAC,EACzC,QAAQ,IAAM,CACbP,GACN,CAAK,EAEHH,EAAK,MAAK,EACZ"}